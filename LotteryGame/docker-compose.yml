version: "3.9"

services:
  sqlserver:
      image: mcr.microsoft.com/mssql/server:2022-latest
      container_name: sqlserver
      environment:
        - ACCEPT_EULA=Y
        - SA_PASSWORD=YourStrong!Passw0rd
      ports:
        - "1433:1433"
      volumes:
        - sqlserver_data:/var/opt/mssql
      networks:
        - backend

  walletservice.api:
    build:
      context: .
      dockerfile: WalletService/Api/WalletService.Api/Dockerfile
    container_name: walletservice
    depends_on:
        - sqlserver
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - ConnectionStrings__Default=Server=sqlserver,1433;Database=WalletServiceDb;User Id=sa;Password=YourStrong!Passw0rd;TrustServerCertificate=True;MultipleActiveResultSets=true;
    ports:
        - "5001:5001"
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P 'YourStrong!Passw0rd' -Q 'SELECT 1' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s
    networks:
        - backend
    volumes:
        - ./UserDataService/Api/UserDataAccessService.Api/wwwroot/images:/app/wwwroot/images

  mongo:
    image: mongo:7.0
    container_name: wagerdb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - backend

  wagerservice.api:
    build:
      context: .
      dockerfile: WagerService/Api/WagerService.Api/Dockerfile
    container_name: wagerservice
    depends_on:
      - mongo
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - MongoDb__Host=mongodb://mongo:27017
      - MongoDb__DatabaseName=WagerServiceDb
    ports:
      - "5002:5002"
    networks:
      - backend

  couchdb:
    image: couchdb:3.3
    container_name: couchdb
    restart: always
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=admin
    ports:
      - "5984:5984"
    volumes:
      - couchdb_data:/opt/couchdb/data
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://admin:admin@localhost:5984/ || exit 1"]
      interval: 5s
      retries: 10
      start_period: 10s

  drawservice.api:
    build:
      context: .
      dockerfile: DrawService/Api/DrawService.Api/Dockerfile
    container_name: drawservice
    depends_on:
      - couchdb
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - CouchDB__Endpoint=http://admin:admin@couchdb:5984/
      - CouchDB__Username=admin
      - CouchDB__Password=admin
    ports:
      - "5003:5003"
    networks:
      - backend

  drawservice.workers:
    build:
      context: .
      dockerfile: DrawService/Workers/DrawService.Workers/Dockerfile
    container_name: drawservice.workers
    depends_on:
      couchdb:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - WorkerDelay=1000
      - CouchDB__Endpoint=http://admin:admin@couchdb:5984/
      - CouchDB__Username=admin
      - CouchDB__Password=admin
    restart: always
    networks:
      - backend

  redis:
    image: redis:7.0
    container_name: redis
    restart: always
    ports:
      - "5005:6379"
    networks:
      - backend

  orchestrator.api:
    build:
      context: .
      dockerfile: Orchestrators/Api/LotteryGame.Orchestrators.Api/Dockerfile
    container_name: orchestrator
    depends_on:
      - walletservice.api
      - wagerservice.api
      - drawservice.api
      - redis
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - Cache__UseInMemoryCache=false
      - Cache__ConnectionStrings__Redis=redis:6379
      - Grpc__WalletServiceUrl=http://walletservice:5001
      - Grpc__WagerServiceUrl=http://wagerservice:5002
      - Grpc__DrawServiceUrl=http://drawservice:5003
      - Kestrel__Endpoints__Grpc__Url=http://0.0.0.0:5000
    ports:
      - "5000:5000"
    networks:
      - backend


volumes:
  sqlserver_data:
  mongo_data:
  couchdb_data:

networks:
  backend:
    driver: bridge